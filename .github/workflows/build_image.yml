name: Build & Push Docker (multi-arch)

on:
  push:
    branches: ["*"]
    tags: ["*"]
  workflow_dispatch:

# Required for GHCR
permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: [self-hosted, ubuntu-latest]

    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v5
        with:
          submodules: recursive # clone submodules recursively
          fetch-depth: 0 # good practice for tags/metadata

      - name: Set up QEMU (for arm64 emulation)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute image name (lowercase for GHCR)
        shell: bash
        run: echo "IMAGE_NAME=ghcr.io/${GITHUB_REPOSITORY,,}" >> "$GITHUB_ENV"

      - name: Extract Docker metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            # latest on main
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/master' }}
            # branch tags (e.g., main, feature/foo)
            type=ref,event=branch
            # git tag pushes (e.g., v1.2.3)
            type=ref,event=tag
            # always add a short SHA tag
            type=sha,format=short

      - name: Build and push (amd64 + arm64)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
